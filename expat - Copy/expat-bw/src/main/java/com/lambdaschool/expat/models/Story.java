package com.lambdaschool.expat.models;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * The entity allowing interaction with the markets table
 */
@Entity
@Table(name = "storys")
@JsonIgnoreProperties(value = "posts")
public class Story extends Auditable {
    /**
     * The primary key (long) of the markets table.
     */
    @Id
    @GeneratedValue
    private long storyId;

    /**
     * Market name. Cannot be null.
     */
    @Column(nullable = false)
    private String name;

    @OneToMany(
            mappedBy = "story",
            cascade = CascadeType.ALL,
            orphanRemoval = true
    )
    @JsonIgnoreProperties(value = "story", allowSetters = true)
    private Set<Post> posts = new HashSet<>();

    /**
     * Default constructor used primarily by the JPA.
     */
    public Story() {}

    /**
     * Give the params, create a new market object.
     * marketId is autogenerated
     *
     * @param name The name (String) of the market
     */
    public Story(String name) {
        this.name = name;
    }

    public Set<Post> getPosts() {
        return posts;
    }

    public void setPosts(Set<Post> posts) {
        this.posts = posts;
    }

    /**
     * Getter for marketId
     *
     * @return the marketId (long) of the market
     */
    public long getStoryId() {
        return storyId;
    }

    /**
     * Setter for marketId. Used primary for seeding data
     *
     * @param storyId the new marketId (long) of the market
     */
    public void setStoryId(long storyId) {
        this.storyId = storyId;
    }

    /**
     * Getter for name
     *
     * @return the name (String) of the market
     */
    public String getName() {
        return name;
    }

    /**
     * Setter for item name
     *
     * @param name (string) of the market
     */
    public void setName(String name) {
        this.name = name;
    }
}
